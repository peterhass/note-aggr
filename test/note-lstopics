#!/usr/bin/env bash
source "$(dirname -- "${BASH_SOURCE[0]}")/../bin/env.sh"

log() { echo -e "\033[1m$@\033[0m" >&2; }
failure_log() { printf '\033[1;31m%s\033[0m\n' "$*" >&2; }
success_log() { printf '\033[1;32m%s\033[0m\n' "$*" >&2; }


llm_assert() {
  local user_input="$1"
  local assertion=$(cat -)

  local response=$(
    llm <<-EOF
    You are a quality assurance expert. When giving a prompt, you MUST respond with TRUE or FALSE depending if the given assertion is fulfilled or not.

    # Example
    Assertion: Hungry lions can fly.
    Response: FALSE

    # Assertion
    $assertion

    # User Input
    $user_input
EOF
  )

  local trimmed_response=$(xargs <<< "$response")

  case "$trimmed_response" in
    "TRUE")
      success_log "[${FUNCNAME[1]}]" "Succeeded assertion"
      return 0
      ;;
    "FALSE")
      failure_log "[${FUNCNAME[1]}]" "Failed assertion"
      failure_log
      failure_log "Assertion:"
      failure_log "$assertion"
      failure_log
      failure_log "User Input:"
      failure_log "$user_input"

      exit 1
      ;;
    *)
      failure_log "[${FUNCNAME[1]}]" "Failed assertion"
      failure_log
      failure_log "Assertion:"
      failure_log "$assertion"
      failure_log
      failure_log "User Input:"
      failure_log "$user_input"
      failure_log
      failure_log "Response:"
      failure_log "$trimmed_response"
      exit 1
      ;;
  esac
}

test_about_me() {
  log "[$FUNCNAME] Checking topic selection according to \$ABOUT_ME"

  export ABOUT_ME="
  Name: Peter
  Role: Scrum Master
  Company: FancyTravel GmbH.
  Focus Areas:
  - team building
  - team processes
  "
  local topics=$(note-lstopics <<-EOF
  - morning standup: team mentions slow loading on itinerary pages, maybe caching issue? check logs later
  - call with devops: server response spikes around 11am, maybe DB indexing problem
  - marketing wants new promo banner for Canada winter trips up by Friday, check assets
  - got feedback from support: some users complaining checkout button disappears on mobile safari
  - looked at new analytics dashboard, bounce rate on landing page higher than last week
  - Marty complained about still waiting for others to review his PRs
EOF
  )

  llm_assert "$topics" <<-EOF
  The given user input mentions none of the following topics:
  - server response times
  - database indexing
  - support
  - analytics
EOF
}

test_existing_topics_env() {
  log "[$FUNCNAME] Checking topic matching according to \$TOPICS"

  export ABOUT_ME="
  I am a Software Developer at FancyTravel GmbH. My focus areas include:
  *   Product knowledge
  *   Technical details
  *   Software design & architecture
  *   Stakeholder information
  "
  export TOPICS="
  itinerary
  infrastructure
  marketing
  analytics
  checkout
  checkout_bugs
  vision
  "
  
  local topics=$(note-lstopics <<-EOF
  - morning standup: team mentions slow loading on itinerary pages, maybe caching issue? check logs later
  - call with devops: server response spikes around 11am, maybe DB indexing problem
  - marketing wants new promo banner for Canada winter trips up by Friday, check assets
  - got feedback from support: some users complaining checkout button disappears on mobile safari
  - looked at new analytics dashboard, bounce rate on landing page higher than last week
  - Marty complained about still waiting for others to review his PRs
  - Support reported some users were not able to login with older chrome versions. Problem needs to be investigated.
EOF
  )

  # TODO: Assertion fails from time to time because of bad prompt in note-lstopics.
  #   Gemini sometimes puts performance issues under infrastructure and sometimes
  #   creates seperate (very granular) topics 
  llm_assert "$topics" <<-EOF
  Given user input contains the following topics:
  - itinerary
  - infrastructure
  - marketing
  - analytics
  - checkout_bugs

  All other topics MUST not mention anything related to the following topics:
  - checkout (without prefix)
  - anything performance related
  - promo banner
  - mobile safari
EOF
}

test_about_me
test_existing_topics_env
